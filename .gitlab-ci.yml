stages:
  - sonar
  - deploy

sonar:
  stage: sonar
  script:
    - export SONAR_SCANNER_VERSION=4.7.0.2747
    - export SONAR_SCANNER_HOME=$HOME/.sonar/sonar-scanner-$SONAR_SCANNER_VERSION-linux
    - curl --create-dirs -sSLo $HOME/.sonar/sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-$SONAR_SCANNER_VERSION-linux.zip
    - unzip -o $HOME/.sonar/sonar-scanner.zip -d $HOME/.sonar/
    - export PATH=$SONAR_SCANNER_HOME/bin:$PATH
    - export SONAR_SCANNER_OPTS="-server"
    - sonar-scanner -Dsonar.login="${SONAR_TOKEN}" -Dsonar.projectKey=eduplanet-backend -Dsonar.sources=. -Dsonar.host.url=https://sonar.turnkey.work

  only:
    - dev

deploy to dev:
  stage: deploy
  script:
    - echo "${DEV_SSH_PRIVATE_KEY}" > ssh_key.pem
    - chmod 400 ssh_key.pem
    - ssh -o StrictHostKeyChecking=no -i ssh_key.pem "${USER}"@"${DEV_SERVER_IP}" "./backend-uat-cd.sh"
    
  environment:
    name: dev
  only:
    - dev

deploy to production:
  stage: deploy
  script:
    - echo "${PRODUCTION_SSH_PRIVATE_KEY}" > ssh_key.pem
    - chmod 400 ssh_key.pem
    - ssh -o StrictHostKeyChecking=no -i ssh_key.pem "${USER}"@"${PROD_SERVER_IP}" "./backend-prod-cd.sh"
    - echo "deployed to production"

  environment:
    name: production
  only:
    - production
